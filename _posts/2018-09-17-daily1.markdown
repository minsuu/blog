---
layout: post
title:  "daily #1"
date:   2018-09-17 17:12:00 +0900
categories: jekyll update
math: true
---
I've taken [Kakao blind test][kakao] last week.
It was an online coding test that took about 5hrs long.
I was shocked that I've missed 2 problems out of 7!

The first of the two was about reconstructing a tree given points
with the $(x,y)$ coordinate, from specific rules like
(a) parent has bigger $y$ coordinate than its children, and 
(b) the left child has smaller $x$ coodrdinate than its parent.
I implemented it with recursion, then faced RTE(runtime error).
I once thought about the stack depth, however, denied that possiblity
since the maximum depth of a tree was $1000$. It was a sheer misunderstanding.

Only after the test I found [that][slimit] Python has a very limited recursion depth($<998$).
It was my first time using python in a test, it was never a problem in C++.
This gave me a precious lesson using Python: *never think of using recursion*.
I also once read about [function call overhead][func] in Python.
I sought after some optimizations for function calls in Python, but hardly could find any.

The second one I missed was about parsing HTML tags.
I think the hard part was counting words in the HTML file,
which was constrained to text data, and was split by non-alphabetical chracters.
I continued to get WA(wrong answer) from it.
In hindsight, I think I had a wrong regular expression counting words.

For counting *words that was enclosed by non-alphabetical characters*,
I used the this regular expression.

``([^A-Za-z]|\A)WORD([^A-Za-z]|\Z)``

However, it was not able to count the case
`WORD\nWORD` correctly. It is because the first match actually consumes `\n`,
so that the next word cannot take one for next match.. Sigh.
I am thinking about the correct version, but I think it needs some research.
(Actually, it's [said][re] that this kind of thing is what RE is goot at.)

To be honest, I seriously thought it will be a piece of cake
(like qualification rounds in Google Codejam).
So I had a plan to use all the 7 language
(C++, Java, Python2, Python3, JavaScript, Swift, and Kotlin)
to solve 7 problems. After spending 2 hours
trying to solve problem 2 and 3 in Javascript and Swift each,
I discovered it was a massive failure :smile:.

[kakao]: https://www.welcomekakao.com/competitions/79/2019-2nd-kakao-blind-recruitment
[slimit]: https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it
[func]: https://stackoverflow.com/questions/5790860/and-vs-list-and-dict-which-is-better
[re]: https://stackoverflow.com/questions/406230/regular-expression-to-match-a-line-that-doesnt-contain-a-word